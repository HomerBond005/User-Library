<?php
 require_once "settings.php"; class DatabaseConnection { private $mysqliObj; private $statements = array(); public function __construct () { $this->mysqliObj = new mysqli(); $this->mysqliObj->real_connect(settings\DB_server, settings\DB_user, settings\DB_password, settings\DB_database); } public function getConnection() { if ($this->mysqliObj->connect_error) throw new Exception("Database Error:\n" . mysqli_connect_error()); else return $this->mysqliObj; } public function prepare($sql) { $dbPrefix = settings\DB_prefix; $correctSQL = str_replace("{dbpre}", $dbPrefix, $sql); if ($stmt = $this->mysqliObj->prepare($correctSQL)) { } else throw new Exception("DataBase Error: " . $this->mysqliObj->error); $this->statements[] = $stmt; return $stmt; } public function close($freeResult = false) { foreach ($this->statements as $stmt) { if ($freeResult) $stmt->free_result(); $stmt->close(); } $this->mysqliObj->close(); } public function affected_rows() { return $this->mysqliObj->affected_rows; } public function insert_id() { return $this->mysqliObj->insert_id; } } class Cache { private $fields = array(); private $values = array(); public function inCache($field) { return in_array($field, $this->fields); } public function setField($field, $value) { if ($this->inCache($field)) { $this->cleanArrays($field); $this->fields[] = $field; $this->values[] = $value; } else { $this->fields[] = $field; $this->values[] = $value; } } public function getField($field, $default = null) { if ($this->inCache($field)) { $index = array_search($field, $this->fields); return $this->values[$index]; } else return $default; } private function cleanArrays($field) { $index = array_search($field, $this->fields); unset($this->fields[$index]); unset($this->values[$index]); $this->fields = array_values($this->fields); $this->values = array_values($this->values); } } ?>